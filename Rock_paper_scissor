from tkinter import *
from PIL import Image,ImageTk
import random
from tkinter import messagebox

root=Tk()
root.title("Rock Paper Scissor")
root.configure(background="#9b59b6")

rock_img_user= ImageTk.PhotoImage(Image.open("R_rock.png"))
paper_img_user= ImageTk.PhotoImage(Image.open("R_paper.png"))
scissor_img_user= ImageTk.PhotoImage(Image.open("R_scissor.png"))
rock_img_comp= ImageTk.PhotoImage(Image.open("L_rock.png"))
paper_img_comp= ImageTk.PhotoImage(Image.open("L_paper.png"))
scissor_img_comp= ImageTk.PhotoImage(Image.open("L_scissor.png"))

#Labels
user_label= Label(root,image=scissor_img_user,bg="#9b59b6")
comp_label= Label(root,image=scissor_img_comp,bg="#9b59b6")
comp_label.grid(row=1, column=0, padx= 50, pady= 80)
user_label.grid(row=1, column=4, padx= 50, pady= 80)

#Scores
user_score= Label(root, text=0, font=100, bg="#9b59b6", fg="white")
computer_score= Label(root, text=0, font=100, bg="#9b59b6", fg="white")
computer_score.grid(row=1, column=1, padx= 50, pady= 80)
user_score.grid(row=1, column=3, padx= 50, pady= 80)

#Indicator
user_indicator= Label(root, text="USER",bg="#9b59b6", fg="white")
comp_indicator= Label(root, text="COMPUTER",bg="#9b59b6", fg="white")
comp_indicator.grid(row=0, column=1, padx= 40, pady= 60)
user_indicator.grid(row=0, column=3, padx= 40, pady= 60)

# i=0
# while i<5:
#Buttons
rock= Button(root, width=20, height=2, text="Rock", bg="#FF3E4D", fg="white",command= lambda:  updateImg("rock"))
paper= Button(root, width=20, height=2, text="Paper", bg="#FAD02E", fg="white", command= lambda: updateImg("paper"))
scissor= Button(root, width=20, height=2, text="Scissor", bg="#0ABDE3", fg="white", command= lambda: updateImg("scissor") )
rock.grid(row=2, column=1)
paper.grid(row=2, column=2)
scissor.grid(row=2, column=3)
    # i=i+1

#Message
msg= Label(root, font=50, bg="#9b59b6", fg="white")
msg.grid(row=3, column=2)

#update message
def updateMsg(x):
    msg["text"]= x
    
#update score
def update_user_score():
    score=int(user_score["text"])
    score += 1
    if score == 5:
        messagebox.showinfo("You are Winner")
    user_score["text"]= str(score)

def update_comp_score():
    score=int(computer_score["text"])
    score += 1
    if score == 5:
        messagebox.showinfo("Computer is Winner")
    computer_score["text"]= str(score)
    
#check winner

def check_winner(user,computer):
    if user==computer:
        updateMsg("Oops!!! Its a Tie...")
    elif user=="rock":
        if computer=="paper":
            updateMsg("You Loose!!!")
            update_comp_score()
        else:
            updateMsg("You win!!!")
            update_user_score()
    elif user=="paper":
        if computer=="scissor":
            updateMsg("You Loose!!!")
            update_comp_score()
        else:
            updateMsg("You win!!!")
            update_user_score()
    elif user=="scissor":
        if computer=="rock":
            updateMsg("You Loose!!!")
            update_comp_score()
        else:
            updateMsg("You Win!!!")
            update_user_score()
    else:
        pass
            
#Update choice


def updateImg(x):
    #for computer
    choices=["rock","paper","scissor"]
    CompChoice= random.choice(choices)
    if CompChoice=="rock":
        comp_label.configure(image=rock_img_comp)
    elif CompChoice=="paper":
        comp_label.configure(image=paper_img_comp)
    else:
        comp_label.configure(image=scissor_img_comp)
    
    #for user
    if x=="rock":
        user_label.configure(image=rock_img_user)
    elif x=="paper":
        user_label.configure(image=paper_img_user)
    else:
        user_label.configure(image=scissor_img_user)
    
    check_winner(x,CompChoice)

        
    # print("Do you want to play again? (Y/N)")
    # ans = input().lower
 
    # # if user input n or N then condition is True
    # if ans == 'n':
    #     break




root.mainloop()